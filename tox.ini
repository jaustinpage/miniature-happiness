# Tox configuration file
# Read more under https://tox.readthedocs.org/

[tox]
minversion = 3.15
skip_missing_interpreters = true
skipsdist = true
envlist =
    clean
    {win,nix,mac}-format
    py{39}-{test,flake8}


[testenv:clean]
description = Clean the package
skip_install = true
changedir = {toxinidir}
commands =
    python -c 'from shutil import rmtree; rmtree("build", True); rmtree("dist", True)'


[testenv:{win,nix,mac}-format]
description = Format imports, code, and markdown files.
depends = clean
platform =
    nix: linux
    mac: darwin
    win: win32
deps =
    black
    isort
    mdformat-gfm
allowlist_externals =
    sort
skip_install = true
commands =
    python3 -m isort --profile black app.py src tests
    python3 -m black app.py src/ tests/
    python3 -m mdformat --wrap 88 README.md
    win: sort /o whitelist.txt whitelist.txt
    nix,mac: sort -o whitelist.txt whitelist.txt


[testenv:py{36,38,39}-test]
description = invoke pytest to run automated tests
depends =
    {win,nix,mac}-format
setenv =
    TOXINIDIR = {toxinidir}
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
passenv =
    HOME
deps =
    poetry
commands =
    poetry install -v
    poetry export --without-hashes --dev --output requirements.txt
    python -c 'from pathlib import Path; contents = Path("requirements.txt").read_text() + ".\n"; Path("requirements.txt").write_text(contents)'
    poetry run coverage erase
    poetry run pytest --cov miniature_happiness --cov-report=term-missing --cov-fail-under=100 --verbose {posargs}


[testenv:py{36,38,39}-flake8]
description = run flake8 on project
depends =
    py36: py36-test
    py38: py38-test
    py39: py39-test
deps =
    darglint
    flake8
    flakehell
    flake8-2020>=1.6.0
    flake8-absolute-import>=1.0
    flake8-annotations>=2.7.0
    flake8-annotations-complexity>=0.0.6
    flake8-bandit>=2.1.2
    flake8-black>=0.2.3
    flake8-blind-except>=0.2.0
    flake8-breakpoint>=1.1.0
    flake8-broken-line>=0.3.0
    flake8-bugbear>=21.9.2
    flake8-builtins>=1.5.3
    flake8-class-attributes-order>=0.1.2
    flake8-comprehensions>=3.7.0
    flake8-datetimez>=20.10.0
    flake8-debugger>=4.0.0
    flake8-dunder-class-obj>=0.1.1
    flake8-eradicate>=1.1.0
    flake8-executable>=2.1.1
    flake8-expression-complexity>=0.0.9
    flake8-fixme>=1.1.1
    flake8-flask>=0.9.3
    flake8-if-expr>=1.0.4
    flake8-isort>=4.0.0
    flake8-logging-format>=0.6.0
    flake8-no-implicit-concat>=0.3.0
    flake8-pep3101>=1.3.0
    flake8-print>=4.0.0
    flake8-pytest>=1.3
    flake8-pytest-style>=1.5.0
    flake8-raise>=0.0.5
    flake8-requirements>=1.5.1
    flake8-return>=1.1.3
    flake8-simplify>=0.14.2
    flake8-spellcheck>=0.24.0
    flake8-strftime>=0.3.2
    flake8-string-format>=0.3.0
    flake8-super>=0.1.3
    flake8-use-pathlib>=0.2.0
    flask
    pep8-naming>=0.12.1
    mdformat-gfm
    mypy
skip_install = true
changedir = {toxinidir}
commands =
    flakehell lint app.py src/
    flakehell lint tests/
    python3 -m mypy src/
    python3 -m mdformat --check --wrap 88 README.md src/
